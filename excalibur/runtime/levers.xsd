<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
            elementFormDefault="unqualified"
            attributeFormDefault="unqualified">
  <!-- How this file is written:

       Each of the types are represented as either named simple types or
       named complex types to aid with data binding (jaxb/pyxb) rather than a
       continuous stream of anonymous types.

       All of the complex types are first in alphabetical order of their name.
       The simple types follow. Normally the simple types are used to constrain
       a general schema type. Lastly is the root node for the document.

       The annotation-documentation nodes are used to define the type. -->

  <!-- Template
  <xs:complexType name="">
    <xs:annotation>
      <xs:documentation xml:lang="en">
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
    </xs:sequence>
    <xs:attribute default="" name="" type="" use=""/>
  </xs:complexType>

  -->

  <xs:complexType name="hilo">
    <xs:annotation>
      <xs:documentation xml:lang="en">
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="lo" type="xs:float" use="required"/>
    <xs:attribute name="hi" type="xs:float" use="required"/>
  </xs:complexType>

  <xs:simpleType name="HITEMPmolecule">
    <xs:restriction base="xs:string">
      <xs:enumeration value="C2H2"/>
      <xs:enumeration value="CH3OH"/>
      <xs:enumeration value="CH4"/>
      <xs:enumeration value="CO"/>
      <xs:enumeration value="CO2"/>
      <xs:enumeration value="H2O"/>
      <xs:enumeration value="HNO3"/>
      <xs:enumeration value="N2"/>
      <xs:enumeration value="N2O"/>
      <xs:enumeration value="NO"/>
      <xs:enumeration value="NO2"/>
      <xs:enumeration value="O2"/>
      <xs:enumeration value="O3"/>
      <xs:enumeration value="OH"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HITRANmolecule">
    <xs:restriction base="xs:string">
      <xs:enumeration value="H2-H"/>
      <xs:enumeration value="H2-H2"/>
      <xs:enumeration value="H2-He"/>
      <xs:enumeration value="He-H"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EXOMOLmolecule">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALCL"/>
      <xs:enumeration value="ALH"/>
      <xs:enumeration value="ALO"/>
      <xs:enumeration value="BEH"/>
      <xs:enumeration value="C2"/>
      <xs:enumeration value="C2H2"/>
      <xs:enumeration value="C2H4"/>
      <xs:enumeration value="C3"/>
      <xs:enumeration value="CAO"/>
      <xs:enumeration value="CAOH"/>
      <xs:enumeration value="CH3"/>
      <xs:enumeration value="CH3CL"/>
      <xs:enumeration value="CH4"/>
      <xs:enumeration value="CN"/>
      <xs:enumeration value="CO"/>
      <xs:enumeration value="CO2"/>
      <xs:enumeration value="CP"/>
      <xs:enumeration value="CS"/>
      <xs:enumeration value="H2"/>
      <xs:enumeration value="H2CO"/>
      <xs:enumeration value="H2O"/>
      <xs:enumeration value="H2S"/>
      <xs:enumeration value="HBO"/>
      <xs:enumeration value="HCL"/>
      <xs:enumeration value="HCN"/>
      <xs:enumeration value="KCL"/>
      <xs:enumeration value="KOH"/>
      <xs:enumeration value="LIH"/>
      <xs:enumeration value="LIOH"/>
      <xs:enumeration value="MGH"/>
      <xs:enumeration value="MGO"/>
      <xs:enumeration value="NACL"/>
      <xs:enumeration value="NAH"/>
      <xs:enumeration value="NAOH"/>
      <xs:enumeration value="NH3"/>
      <xs:enumeration value="NO"/>
      <xs:enumeration value="NS"/>
      <xs:enumeration value="PH3"/>
      <xs:enumeration value="PN"/>
      <xs:enumeration value="PO"/>
      <xs:enumeration value="PS"/>
      <xs:enumeration value="SIH4"/>
      <xs:enumeration value="SIN"/>
      <xs:enumeration value="SIO2"/>
      <xs:enumeration value="SIS"/>
      <xs:enumeration value="SO"/>
      <xs:enumeration value="SO2"/>
      <xs:enumeration value="SO3"/>
      <xs:enumeration value="TIO"/>
    </xs:restriction>
  </xs:simpleType>
  <!--
  <xs:simpleType name="fitMolecule">
    <xs:restriction base="xs:string">
      <xs:enumeration value="HCN"/>
      <xs:enumeration value="CH4"/>
      <xs:enumeration value="C2H2"/>
      <xs:enumeration value="CO2"/>
      <xs:enumeration value="H2CO"/>
    </xs:restriction>
  </xs:simpleType>
  The list of molecules that can be fit is large - a union of all the line lists.
  Al recommends reversing this section -
    start with the big list and then make EXOMOL/HITEMP/HITRAN as subsets
    (rather than making the big list as a union of those three)
  -->
  <xs:simpleType name="fitMolecule">
    <xs:union memberTypes="HITEMPmolecule HITRANmolecule EXOMOLmolecule"/>
  </xs:simpleType>

  <xs:complexType name="HITEMPmoleculeList">
    <xs:sequence>
      <xs:element name="molecule" type="HITEMPmolecule" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="HITRANmoleculeList">
    <xs:sequence>
      <xs:element name="molecule" type="HITRANmolecule" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EXOMOLmoleculeList">
    <xs:sequence>
      <xs:element name="molecule" type="EXOMOLmolecule" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="fitMoleculeList">
    <xs:sequence>
      <xs:element name="molecule" type="fitMolecule" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  

  <xs:complexType name="control_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        These attributes allow specific control within the AE. The attribute name
        is the task.algorithm.varName being set. The value of true means it will
        be exercised while false means it will not.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="cerberus.crbmodel.fitmolecules"
         	  type="fitMoleculeList"/>
      <xs:element name="cerberus.crbmodel.HITEMPmolecules"
         	  type="HITEMPmoleculeList"/>
      <xs:element name="cerberus.crbmodel.HITRANmolecules"
         	  type="HITRANmoleculeList"/>
      <xs:element name="cerberus.crbmodel.EXOMOLmolecules"
         	  type="EXOMOLmoleculeList"/>
      <xs:element name="cerberus.atmos.bounds.Teq"
		  type="hilo"/>
      <xs:element name="cerberus.atmos.bounds.abundances"
		  type="hilo"/>
      <xs:element name="cerberus.atmos.bounds.CTP"
		  type="hilo"/>
      <xs:element name="cerberus.atmos.bounds.HLoc"
		  type="hilo"/>
      <xs:element name="cerberus.atmos.bounds.HScale"
		  type="hilo"/>
      <xs:element name="cerberus.atmos.bounds.HThick"
		  type="hilo"/>
    </xs:sequence>
    <xs:attribute name="cerberus.atmos.fitCloudParameters"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="cerberus.atmos.fitNtoO"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="cerberus.atmos.fitCtoO"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="cerberus.atmos.fitT"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="cerberus.atmos.sliceSampler"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="cerberus.crbmodel.lbroadening"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="cerberus.crbmodel.lshifting"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="cerberus.crbmodel.isothermal"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="cerberus.crbmodel.nlevels"
                  type="xs:integer" use="required"/>
    <xs:attribute name="cerberus.crbmodel.solrad"
                  type="xs:float" use="required"/>
    <xs:attribute name="cerberus.crbmodel.Hsmax"
                  type="xs:integer" use="required"/>
    <xs:attribute name="cerberus.plotters.cornerBins"
                  type="xs:integer" use="required"/>
    <xs:attribute name="cerberus.results.nrandomwalkers"
                  type="xs:integer" use="required"/>
    <xs:attribute name="cerberus.results.randomseed"
                  type="xs:integer" use="required"/>
    <xs:attribute name="system.validate.selectMostRecent"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="system.validate.maximizeSelfConsistency"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="ariel.simspectrum.includeMetallicityDispersion"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="ariel.simspectrum.randomCloudProperties"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="ariel.simspectrum.SNRadjustment"
                  type="xs:float" use="required"/>
    <xs:attribute name="ariel.simspectrum.thorngrenMassMetals"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="ariel.simspectrum.tier"
                  type="xs:integer" use="required"/>
    <xs:attribute name="ariel.simspectrum.randomseed"
                  type="xs:integer" use="required"/>
    <xs:attribute name="ariel.simspectrum.metallicityDispersion"
                  type="xs:float" use="required"/>
    <xs:attribute name="ariel.simspectrum.CtoOaverage"
                  type="xs:float" use="required"/>
    <xs:attribute name="ariel.simspectrum.CtoOdispersion"
                  type="xs:float" use="required"/>
    <xs:attribute name="transit.pymc.sliceSampler"
                  type="xs:boolean" use="required"/>
    <xs:attribute name="selftest.Nrepeats"
                  type="xs:integer" use="required"/>
  </xs:complexType>

  <xs:complexType name="filter_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        The filters are used to determine which generic state vectors should be
        computed and which should be ignored.

        If there are no includes, then all filters will be processed unless
        explicitly named with an exclude.

        If there are includes, then only those in the list will be processed
        unless explicity named with an exclude.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="exclude" minOccurs="0" maxOccurs="unbounded"
                  type="filter_names"/>
      <xs:element name="include" minOccurs="0" maxOccurs="unbounded"
                  type="filter_names"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="lever_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        The levers of power (controls) available to the scientist
        are limited to:
          
        controls: these are used by the AE to make decisions on
                  what processing should be done.
        filters: controls what filters should be processed and/or ignored.
        pymc: controls specific to the PYMC processing.
        restrict_to: when empty do all targets, otherwise just those listed
        sequester: never do these targets dispite restrict_to
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="controls" type="control_type"/>
      <xs:element name="filters" type="filter_type"/>
      <xs:element name="pymc" type="pymc_type"/>
      <xs:element name="run_only" type="sequester_type"/>
      <xs:element name="sequester" type="sequester_type"/>
    </xs:all>
    <xs:attribute default="registry" name="index" type="xs:normalizedString"/>
  </xs:complexType>

  <xs:complexType name="pymc_count_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Specify how many iterations for MCMC. The default is used for
        all unspecified targets. Targets can also be individually specified.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="target" minOccurs="0" maxOccurs="unbounded"
                  type="target_override_type"/>
    </xs:sequence>
    <xs:attribute name="default" type="xs:positiveInteger" use="required"/>
  </xs:complexType>

  <xs:complexType name="pymc_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Control the max number of iterations for PYMC.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="cerberuschains" type="pymc_count_type"/>
      <xs:element name="cerberuschainlen" type="pymc_count_type"/>
      <xs:element name="spectrumchains" type="pymc_count_type"/>
      <xs:element name="spectrumchainlen" type="pymc_count_type"/>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="sequester_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Sequester the targets to the island of no processing.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0"
                  name="target" type="target_type"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="target_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        The name of the target to not process and the reason why.
      </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:normalizedString">
        <xs:attribute name="because" type="xs:normalizedString" use="required"/>
        <xs:attribute default="false" name="isRegex" type="xs:boolean"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="target_override_type">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Allows a specific target to be named and a given number of iterations.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:normalizedString" use="required"/>
    <xs:attribute name="steps" type="xs:positiveInteger" use="required"/>
  </xs:complexType>

  <xs:simpleType name="filter_names">
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="Ariel-sim"/>
      <xs:enumeration value="HST-STIS-CCD-G430L-STARE"/>
      <xs:enumeration value="HST-STIS-CCD-G750L-STARE"/>
      <xs:enumeration value="HST-WFC3-IR-G102-SCAN"/>
      <xs:enumeration value="HST-WFC3-IR-G141-SCAN"/>
      <xs:enumeration value="JWST-NIRCAM-IMAGE-F210M-WLP8"/>
      <xs:enumeration value="JWST-NIRCAM-NRCALONG-F322W2-GRISMR"/>
      <xs:enumeration value="JWST-NIRISS-NIS-CLEAR-GR700XD"/>
      <xs:enumeration value="JWST-NIRSPEC-NRS-CLEAR-PRISM"/>
      <xs:enumeration value="JWST-NIRSPEC-NRS-F290LP-G395H"/>
      <xs:enumeration value="JWST-NIRSPEC-NRS-F290LP-G395M"/>
      <xs:enumeration value="Spitzer-IRAC-IR-36-SUB"/>
      <xs:enumeration value="Spitzer-IRAC-IR-45-SUB"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:element name="levers">
    <xs:complexType>
      <xs:annotation>
        <xs:documentation xml:lang="en">
          This terrible construct is so that xjc can autodetect this as the
          root node for processing. Many things would be better but this is
          the most workable solution especially if the making of the binding
          code is automated in the pom. The only other real solution is to
          modify one of the classes generated by hand.
        </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
        <xs:extension base="lever_type"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
</xs:schema>
